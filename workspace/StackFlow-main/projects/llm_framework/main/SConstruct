import os

Import('env')
with open(env['PROJECT_TOOL_S']) as f:
    exec(f.read())

SRCS = Glob('src/*.c*')
INCLUDE = []
PRIVATE_INCLUDE = []
REQUIREMENTS = ['pthread', 'utilities', 'eventpp', 'StackFlow']
STATIC_LIB = []
DYNAMIC_LIB = []
DEFINITIONS = []
DEFINITIONS_PRIVATE = []
LDFLAGS = []
LINK_SEARCH_PATH = []
STATIC_FILES = []

LINK_SEARCH_PATH += [ADir('../static_lib')]

LDFLAGS+=['-Wl,-rpath=/opt/m5stack/lib', '-Wl,-rpath=/usr/local/m5stack/lib', '-Wl,-rpath=/usr/local/m5stack/lib/gcc-10.3', '-Wl,-rpath=/opt/lib', '-Wl,-rpath=/opt/usr/lib', '-Wl,-rpath=./']

STATIC_FILES += [AFile('../static_lib/sherpa/ncnn/libsherpa-ncnn-core.so'),
                 AFile('../static_lib/sherpa/ncnn/libncnn.so'),
                 AFile('../static_lib/libtts.so'),
                 AFile('../static_lib/sherpa/ncnn/libkaldi-native-fbank-core.so'),
                 AFile('../static_lib/libonnxruntime.so.1.14.0')
                 ]

env['COMPONENTS'].append({'target':'static_file',
                          'SRCS':SRCS,
                          'INCLUDE':INCLUDE,
                          'PRIVATE_INCLUDE':PRIVATE_INCLUDE,
                          'REQUIREMENTS':REQUIREMENTS,
                          'STATIC_LIB':STATIC_LIB,
                          'DYNAMIC_LIB':DYNAMIC_LIB,
                          'DEFINITIONS':DEFINITIONS,
                          'DEFINITIONS_PRIVATE':DEFINITIONS_PRIVATE,
                          'LDFLAGS':LDFLAGS,
                          'LINK_SEARCH_PATH':LINK_SEARCH_PATH,
                          'STATIC_FILES':STATIC_FILES,
                          'REGISTER':'project'
                          })
