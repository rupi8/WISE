// Layer Declaration header
//
// This file is auto-generated by cmake, don't edit it.

#include "layer/concat.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat) }
#include "layer/arm/concat_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_arm) }
#include "layer/convolution.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution) }
#include "layer/arm/convolution_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_arm) }
#include "layer/crop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop) }
#include "layer/arm/crop_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_arm) }
#include "layer/dropout.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout) }
#include "layer/arm/dropout_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_arm) }
#include "layer/embed.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Embed) }
#include "layer/flatten.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten) }
#include "layer/arm/flatten_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_arm) }
#include "layer/innerproduct.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct) }
#include "layer/arm/innerproduct_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_arm) }
#include "layer/input.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Input) }
#include "layer/memorydata.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MemoryData) }
#include "layer/reduction.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reduction) }
#include "layer/relu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU) }
#include "layer/arm/relu_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_arm) }
#include "layer/reshape.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape) }
#include "layer/arm/reshape_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_arm) }
#include "layer/sigmoid.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid) }
#include "layer/arm/sigmoid_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_arm) }
#include "layer/slice.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice) }
#include "layer/arm/slice_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_arm) }
#include "layer/softmax.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax) }
#include "layer/arm/softmax_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_arm) }
#include "layer/split.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Split) }
#include "layer/tanh.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH) }
#include "layer/arm/tanh_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_arm) }
#include "layer/rnn.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RNN) }
#include "layer/arm/rnn_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RNN_arm) }
#include "layer/lstm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM) }
#include "layer/arm/lstm_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_arm) }
#include "layer/binaryop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp) }
#include "layer/arm/binaryop_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_arm) }
#include "layer/unaryop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp) }
#include "layer/arm/unaryop_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_arm) }
#include "layer/padding.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding) }
#include "layer/arm/padding_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_arm) }
#include "layer/expanddims.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ExpandDims) }
#include "layer/permute.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Permute) }
#include "layer/quantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize) }
#include "layer/arm/quantize_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_arm) }
#include "layer/dequantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize) }
#include "layer/arm/dequantize_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_arm) }
#include "layer/packing.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing) }
#include "layer/arm/packing_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_arm) }
#include "layer/requantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize) }
#include "layer/arm/requantize_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_arm) }
#include "layer/cast.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast) }
#include "layer/arm/cast_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_arm) }
#include "layer/gemm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm) }
#include "layer/arm/gemm_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_arm) }
#include "layer/convolution1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D) }
#include "layer/arm/convolution1d_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_arm) }
#include "layer/convolutiondepthwise1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise1D) }
#include "layer/matmul.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul) }
#include "layer/arm/matmul_arm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_arm) }
#include "layer/deconvolutiondepthwise1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise1D) }
#include "layer/glu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GLU) }

